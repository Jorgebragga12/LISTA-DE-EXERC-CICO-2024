1.#include <iostream>
using namespace std;

int main() {
    int A[6] = {1, 0, 5, -2, -5, 7};
    
    int soma = A[0] + A[1] + A[5];
    cout << "Soma: " << soma << endl;
    
    A[4] = 100;
    
    for(int i = 0; i < 6; i++) {
        cout << "A[" << i << "] = " << A[i] << endl;
    }
    
    return 0;
}
2.#include <iostream>
using namespace std;

int main() {
    int A[6];
    
    for(int i = 0; i < 6; i++) {
        cin >> A[i];
    }
    
    for(int i = 0; i < 6; i++) {
        cout << A[i] << " ";
    }
    cout << endl;
    
    return 0;
}
3.#include <iostream>
#include <cmath>
using namespace std;

int main() {
    double A[10], B[10];
    
    for(int i = 0; i < 10; i++) {
        cin >> A[i];
        B[i] = pow(A[i], 2);
    }
    
    cout << "Vetor A: ";
    for(int i = 0; i < 10; i++) {
        cout << A[i] << " ";
    }
    cout << endl;
    
    cout << "Vetor B: ";
    for(int i = 0; i < 10; i++) {
        cout << B[i] << " ";
    }
    cout << endl;
    
    return 0;
}
4.#include <iostream>
using namespace std;

int main() {
    int A[8];
    
    for(int i = 0; i < 8; i++) {
        cin >> A[i];
    }
    
    int X, Y;
    cin >> X >> Y;
    
    cout << "Soma: " << A[X] + A[Y] << endl;
    
    return 0;
}
5.#include <iostream>
using namespace std;

int main() {
    int A[10], count = 0;
    
    for(int i = 0; i < 10; i++) {
        cin >> A[i];
    }
    
    for(int i = 0; i < 10; i++) {
        if(A[i] % 2 == 0) {
            count++;
        }
    }
    
    cout << "Quantidade de pares: " << count << endl;
    
    return 0;
}
6.#include <iostream>
using namespace std;

int main() {
    int A[10];
    
    for(int i = 0; i < 10; i++) {
        cin >> A[i];
    }
    
    int max = A[0], min = A[0];
    for(int i = 1; i < 10; i++) {
        if(A[i] > max) max = A[i];
        if(A[i] < min) min = A[i];
    }
    
    cout << "Maior: " << max << " Menor: " << min << endl;
    
    return 0;
}
7.#include <iostream>
using namespace std;

int main() {
    int A[10];
    
    for(int i = 0; i < 10; i++) {
        cin >> A[i];
    }
    
    int max = A[0], pos = 0;
    for(int i = 1; i < 10; i++) {
        if(A[i] > max) {
            max = A[i];
            pos = i;
        }
    }
    
    for(int i = 0; i < 10; i++) {
        cout << A[i] << " ";
    }
    cout << endl;
    
    cout << "Maior elemento: " << max << " na posicao " << pos << endl;
    
    return 0;
}
8.#include <iostream>
using namespace std;

int main() {
    int A[6];
    
    for(int i = 0; i < 6; i++) {
        cin >> A[i];
    }
    
    for(int i = 5; i >= 0; i--) {
        cout << A[i] << " ";
    }
    cout << endl;
    
    return 0;
}
9.#include <iostream>
using namespace std;

int main() {
    int A[6];
    
    for(int i = 0; i < 6; i++) {
        cin >> A[i];
    }
    
    for(int i = 5; i >= 0; i--) {
        if(A[i] % 2 == 0) {
            cout << A[i] << " ";
        }
    }
    cout << endl;
    
    return 0;
}
10.#include <iostream>
using namespace std;

int main() {
    double A[15], soma = 0.0;
    
    for(int i = 0; i < 15; i++) {
        cin >> A[i];
        soma += A[i];
    }
    
    double media = soma / 15.0;
    cout << "Media geral: " << media << endl;
    
    return 0;
}
11.#include <iostream>
using namespace std;

int main() {
    double A[10];
    int countNeg = 0;
    double sumPos = 0.0;

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
    }

    for (int i = 0; i < 10; i++) {
        if (A[i] < 0) {
            countNeg++;
        } else {
            sumPos += A[i];
        }
    }

    cout << "Quantidade de números negativos: " << countNeg << endl;
    cout << "Soma dos números positivos: " << sumPos << endl;

    return 0;
}
12.#include <iostream>
using namespace std;

int main() {
    double A[5], soma = 0.0;
    double max, min;

    for (int i = 0; i < 5; i++) {
        cin >> A[i];
        soma += A[i];
    }

    max = min = A[0];

    for (int i = 1; i < 5; i++) {
        if (A[i] > max) max = A[i];
        if (A[i] < min) min = A[i];
    }

    double media = soma / 5.0;

    cout << "Valores lidos: ";
    for (int i = 0; i < 5; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    cout << "Maior: " << max << " Menor: " << min << " Média: " << media << endl;

    return 0;
}
13.#include <iostream>
using namespace std;

int main() {
    double A[5];
    int posMax = 0, posMin = 0;

    for (int i = 0; i < 5; i++) {
        cin >> A[i];
    }

    for (int i = 1; i < 5; i++) {
        if (A[i] > A[posMax]) posMax = i;
        if (A[i] < A[posMin]) posMin = i;
    }

    cout << "Valores lidos: ";
    for (int i = 0; i < 5; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    cout << "Posição do maior valor: " << posMax << endl;
    cout << "Posição do menor valor: " << posMin << endl;

    return 0;
}
14.#include <iostream>
#include <unordered_set>
using namespace std;

int main() {
    int A[10];
    unordered_set<int> seen;
    bool duplicatesFound = false;

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
    }

    for (int i = 0; i < 10; i++) {
        if (seen.find(A[i]) != seen.end()) {
            cout << "Valor duplicado: " << A[i] << endl;
            duplicatesFound = true;
        } else {
            seen.insert(A[i]);
        }
    }

    if (!duplicatesFound) {
        cout << "Nenhum valor duplicado encontrado" << endl;
    }

    return 0;
}
15.#include <iostream>
#include <unordered_set>
using namespace std;

int main() {
    int A[20];
    unordered_set<int> seen;

    for (int i = 0; i < 20; i++) {
        cin >> A[i];
    }

    cout << "Elementos do vetor sem repetição: ";
    for (int i = 0; i < 20; i++) {
        if (seen.find(A[i]) == seen.end()) {
            cout << A[i] << " ";
            seen.insert(A[i]);
        }
    }
    cout << endl;

    return 0;
}
16.#include <iostream>
using namespace std;

int main() {
    double A[5];
    int codigo;

    for (int i = 0; i < 5; i++) {
        cin >> A[i];
    }

    cin >> codigo;

    if (codigo == 0) {
        return 0;
    } else if (codigo == 1) {
        for (int i = 0; i < 5; i++) {
            cout << A[i] << " ";
        }
        cout << endl;
    } else if (codigo == 2) {
        for (int i = 4; i >= 0; i--) {
            cout << A[i] << " ";
        }
        cout << endl;
    } else {
        cout << "Código inválido" << endl;
    }

    return 0;
}
17.#include <iostream>
using namespace std;

int main() {
    int A[10];

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
    }

    for (int i = 0; i < 10; i++) {
        if (A[i] < 0) {
            A[i] = 0;
        }
    }

    for (int i = 0; i < 10; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    return 0;
}
18.#include <iostream>
using namespace std;

int main() {
    int A[10], x;

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
    }

    cin >> x;

    cout << "Múltiplos de " << x << ": ";
    for (int i = 0; i < 10; i++) {
        if (A[i] % x == 0) {
            cout << A[i] << " ";
        }
    }
    cout << endl;

    return 0;
}
19.#include <iostream>
using namespace std;

int main() {
    int A[50];

    for (int i = 0; i < 50; i++) {
        A[i] = (i + 5 * i) % (i + 1);
    }

    for (int i = 0; i < 50; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    return 0;
}
20.#include <iostream>
using namespace std;

int main() {
    int A[10], B[10], j = 0;

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
    }

    for (int i = 0; i < 10; i++) {
        if (A[i] % 2 != 0) {
            B[j++] = A[i];
        }
    }

    cout << "Vetor A: ";
    for (int i = 0; i < 10; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    cout << "Vetor B (ímpares): ";
    for (int i = 0; i < j; i++) {
        cout << B[i] << " ";
    }
    cout << endl;

    return 0;
}
21.#include <iostream>
using namespace std;

int main() {
    int A[10], B[10], C[10];

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
    }

    for (int i = 0; i < 10; i++) {
        cin >> B[i];
    }

    for (int i = 0; i < 10; i++) {
        C[i] = A[i] - B[i];
    }

    cout << "Vetor C: ";
    for (int i = 0; i < 10; i++) {
        cout << C[i] << " ";
    }
    cout << endl;

    return 0;
}
22.#include <iostream>
using namespace std;

int main() {
    int A[10], B[10], C[10];

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
    }

    for (int i = 0; i < 10; i++) {
        cin >> B[i];
    }

    for (int i = 0; i < 10; i++) {
        if (i % 2 == 0) {
            C[i] = A[i];
        } else {
            C[i] = B[i];
        }
    }

    cout << "Vetor C: ";
    for (int i = 0; i < 10; i++) {
        cout << C[i] << " ";
    }
    cout << endl;

    return 0;
}
23.#include <iostream>
using namespace std;

int main() {
    double A[5], B[5];
    double produtoEscalar = 0.0;

    for (int i = 0; i < 5; i++) {
        cin >> A[i];
    }

    for (int i = 0; i < 5; i++) {
        cin >> B[i];
    }

    for (int i = 0; i < 5; i++) {
        produtoEscalar += A[i] * B[i];
    }

    cout << "Vetor A: ";
    for (int i = 0; i < 5; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    cout << "Vetor B: ";
    for (int i = 0; i < 5; i++) {
        cout << B[i] << " ";
    }
    cout << endl;

    cout << "Produto escalar: " << produtoEscalar << endl;

    return 0;
}
24.#include <iostream>
using namespace std;

int main() {
    int numeroAluno[10];
    float alturaAluno[10];
    int alunoMaisBaixo, alunoMaisAlto;
    float menorAltura, maiorAltura;

    for (int i = 0; i < 10; i++) {
        cin >> numeroAluno[i] >> alturaAluno[i];
    }

    alunoMaisBaixo = alunoMaisAlto = numeroAluno[0];
    menorAltura = maiorAltura = alturaAluno[0];

    for (int i = 1; i < 10; i++) {
        if (alturaAluno[i] < menorAltura) {
            menorAltura = alturaAluno[i];
            alunoMaisBaixo = numeroAluno[i];
        }
        if (alturaAluno[i] > maiorAltura) {
            maiorAltura = alturaAluno[i];
            alunoMaisAlto = numeroAluno[i];
        }
    }

    cout << "Aluno mais baixo: " << alunoMaisBaixo << " com altura " << menorAltura << endl;
    cout << "Aluno mais alto: " << alunoMaisAlto << " com altura " << maiorAltura << endl;

    return 0;
}
25.#include <iostream>
using namespace std;

int main() {
    int A[100];
    int count = 0, num = 1;

    while (count < 100) {
        if (num % 7 != 0 && num % 10 != 7) {
            A[count] = num;
            count++;
        }
        num++;
    }

    for (int i = 0; i < 100; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    return 0;
}
26.#include <iostream>
#include <cmath>
using namespace std;

int main() {
    double v[10], media = 0.0, desvioPadrao = 0.0;

    for (int i = 0; i < 10; i++) {
        cin >> v[i];
        media += v[i];
    }

    media /= 10;

    for (int i = 0; i < 10; i++) {
        desvioPadrao += pow(v[i] - media, 2);
    }

    desvioPadrao = sqrt(desvioPadrao / 10);

    cout << "Desvio padrão: " << desvioPadrao << endl;

    return 0;
}
27.#include <iostream>
using namespace std;

bool isPrime(int num) {
    if (num <= 1) return false;
    for (int i = 2; i <= num / 2; i++) {
        if (num % i == 0) return false;
    }
    return true;
}

int main() {
    int A[10];

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
    }

    cout << "Números primos e suas posições:" << endl;
    for (int i = 0; i < 10; i++) {
        if (isPrime(A[i])) {
            cout << "Número primo: " << A[i] << " na posição " << i << endl;
        }
    }

    return 0;
}
28.#include <iostream>
using namespace std;

int main() {
    int v[10], v1[10], v2[10];
    int idx1 = 0, idx2 = 0;

    for (int i = 0; i < 10; i++) {
        cin >> v[i];
        if (v[i] % 2 == 0) {
            v2[idx2++] = v[i];
        } else {
            v1[idx1++] = v[i];
        }
    }

    cout << "Vetor v1 (ímpares): ";
    for (int i = 0; i < idx1; i++) {
        cout << v1[i] << " ";
    }
    cout << endl;

    cout << "Vetor v2 (pares): ";
    for (int i = 0; i < idx2; i++) {
        cout << v2[i] << " ";
    }
    cout << endl;

    return 0;
}
29.#include <iostream>
using namespace std;

int main() {
    int A[6];
    int somaPares = 0, qtdImpares = 0;

    for (int i = 0; i < 6; i++) {
        cin >> A[i];
    }

    cout << "Números pares digitados: ";
    for (int i = 0; i < 6; i++) {
        if (A[i] % 2 == 0) {
            cout << A[i] << " ";
            somaPares += A[i];
        }
    }
    cout << endl;
    cout << "Soma dos números pares: " << somaPares << endl;

    cout << "Números ímpares digitados: ";
    for (int i = 0; i < 6; i++) {
        if (A[i] % 2 != 0) {
            cout << A[i] << " ";
            qtdImpares++;
        }
    }
    cout << endl;
    cout << "Quantidade de números ímpares: " << qtdImpares << endl;

    return 0;
}
30.#include <iostream>
#include <unordered_set>
#include <vector>
using namespace std;

int main() {
    int A[10], B[10];
    unordered_set<int> setA, setB, interseccao;
    vector<int> result;

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
        setA.insert(A[i]);
    }

    for (int i = 0; i < 10; i++) {
        cin >> B[i];
        setB.insert(B[i]);
    }

    for (auto& elem : setA) {
        if (setB.find(elem) != setB.end()) {
            interseccao.insert(elem);
        }
    }

    cout << "Interseção: ";
    for (auto& elem : interseccao) {
        cout << elem << " ";
    }
    cout << endl;

    return 0;
}
31.#include <iostream>
#include <unordered_set>
#include <vector>
using namespace std;

int main() {
    int A[10], B[10];
    unordered_set<int> unionSet;
    vector<int> unionVector;

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
        unionSet.insert(A[i]);
    }

    for (int i = 0; i < 10; i++) {
        cin >> B[i];
        unionSet.insert(B[i]);
    }

    for (int elem : unionSet) {
        unionVector.push_back(elem);
    }

    cout << "União dos vetores (sem repetição): ";
    for (int i = 0; i < unionVector.size(); i++) {
        cout << unionVector[i] << " ";
    }
    cout << endl;

    return 0;
}
32.#include <iostream>
#include <unordered_set>
#include <vector>
using namespace std;

int main() {
    int x[5], y[5];

    for (int i = 0; i < 5; i++) {
        cin >> x[i];
    }

    for (int i = 0; i < 5; i++) {
        cin >> y[i];
    }
    cout << "Soma entre x e y: ";
    for (int i = 0; i < 5; i++) {
        cout << x[i] + y[i] << " ";
    }
    cout << endl;
    cout << "Produto entre x e y: ";
    for (int i = 0; i < 5; i++) {
        cout << x[i] * y[i] << " ";
    }
    cout << endl;
    cout << "Diferença entre x e y: ";
    unordered_set<int> setY(y, y+5);
    for (int i = 0; i < 5; i++) {
        if (setY.find(x[i]) == setY.end()) {
            cout << x[i] << " ";
        }
    }
    cout << endl;
    cout << "Interseção entre x e y: ";
    for (int i = 0; i < 5; i++) {
        if (setY.find(x[i]) != setY.end()) {
            cout << x[i] << " ";
        }
    }
    cout << endl;
    cout << "União entre x e y: ";
    unordered_set<int> setUnion(x, x+5);
    setUnion.insert(y, y+5);
    for (int elem : setUnion) {
        cout << elem << " ";
    }
    cout << endl;

    return 0;
}
33.#include <iostream>
using namespace std;

int main() {
    int A[15], compacted[15], j = 0;

    for (int i = 0; i < 15; i++) {
        cin >> A[i];
    }

    for (int i = 0; i < 15; i++) {
        if (A[i] != 0) {
            compacted[j++] = A[i];
        }
    }

    cout << "Vetor compactado: ";
    for (int i = 0; i < j; i++) {
        cout << compacted[i] << " ";
    }
    cout << endl;

    return 0;
}
34.#include <iostream>
#include <unordered_set>
using namespace std;

int main() {
    int A[10];
    unordered_set<int> seen;

    for (int i = 0; i < 10; ) {
        int num;
        cin >> num;
        if (seen.find(num) == seen.end()) {
            A[i] = num;
            seen.insert(num);
            i++;
        } else {
            cout << "Número já digitado. Digite outro número." << endl;
        }
    }

    cout << "Vetor final: ";
    for (int i = 0; i < 10; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    return 0;
}
35.#include <iostream>
#include <vector>
using namespace std;

int main() {
    int a, b;
    cin >> a >> b;

    vector<int> vecA, vecB, vecSum;
    
    while (a > 0) {
        vecA.push_back(a % 10);
        a /= 10;
    }

    while (b > 0) {
        vecB.push_back(b % 10);
        b /= 10;
    }

    int maxSize = max(vecA.size(), vecB.size());
    int carry = 0;

    for (int i = 0; i < maxSize; i++) {
        int digitA = (i < vecA.size()) ? vecA[i] : 0;
        int digitB = (i < vecB.size()) ? vecB[i] : 0;
        int sum = digitA + digitB + carry;
        vecSum.push_back(sum % 10);
        carry = sum / 10;
    }

    if (carry > 0) {
        vecSum.push_back(carry);
    }

    cout << "Resultado da soma: ";
    for (int i = vecSum.size() - 1; i >= 0; i--) {
        cout << vecSum[i];
    }
    cout << endl;

    return 0;
}
36.#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    double A[10];

    for (int i = 0; i < 10; i++) {
        cin >> A[i];
    }

    sort(A, A + 10);

    cout << "Vetor ordenado: ";
    for (int i = 0; i < 10; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    return 0;
}
37.#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    int A[11] = {1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1}; // Exemplo do vetor dado na questão

    sort(A, A + 11);

    cout << "Vetor ordenado: ";
    for (int i = 0; i < 11; i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    return 0;
}
38.#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    vector<int> A;

    for (int i = 0; i < 10; i++) {
        int num;
        cin >> num;
        A.push_back(num);
        sort(A.begin(), A.end());
    }

    cout << "Vetor ordenado: ";
    for (int i = 0; i < A.size(); i++) {
        cout << A[i] << " ";
    }
    cout << endl;

    return 0;
}
39.#include <iostream>
using namespace std;

void printPascal(int n) {
    int arr[n][n];

    for (int line = 0; line < n; line++) {
        for (int i = 0; i <= line; i++) {
            if (line == i || i == 0)
                arr[line][i] = 1;
            else
                arr[line][i] = arr[line - 1][i - 1] + arr[line - 1][i];
            cout << arr[line][i] << " ";
        }
        cout << endl;
    }
}

int main() {
    int n;
    cin >> n;
    printPascal(n);
    return 0;
}
